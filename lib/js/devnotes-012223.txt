		//
		// do more stuff here....
		//checkSession(); 		// check the session 
		//checkForCurrent();	// if we have one, check for current app
		// If we havea a "current" value, redirect to the current app
		//
		// if we don't have a current app.....
		// look for first run flag..... (if it is true, first run has already run once)
		// otherwise, if first run is false.... run it.
		// First Run = load data, set values, etc.......


	// DEV USE: create a SOLACE session
	// solaceSession();
	// DEV USE: show start time from the session
	// getStartTime();

	// check to see if we have any saved data
	if (checkForSaved()) {

		log('Yes saved','dev');

		//checkSession();
		
		// returning user: we have a 'firstrun' flag
		/* if (getSaved('firstrun')) {

			// check to see if we have Current App value
			if ((capp) && (capp !=dapp)) {
				// if it's not default app, load the current app
				location.href = (capp);
			}

			// if there is no current app value, load SOLACE Menu
			else {
				// logging
				log('Welcome back!','solace');	
				// actually load the SOLACE Menu
				//loadSolaceMenu();
			}
		} */
	  	//log('We have saved info','engine');
		// setTimeout(function(){ hideLogo(); loadSpinnerTemplate(); loadScreenOne(); }, delay);
	} 
	else {
	  	log('No saved','dev');

		// We have no saved data.....

		// this would be where we do all the first run stuff

		autoSequenceStart();

		loadEngineInfo(metadata);

		//
		// DEV USE STUFF:
	 	//var sobj = {"type":"data"};
	 	//generateNewSaved(sobj);
	 	// setTimeout(function(){ loadSpinnerTemplate(); loadScreenThree(); },2000);
	}

    // DEV USE
// Start the SOLACE Menu:
//
/* function startSolaceMenu() {

	// TODO: check session on apps before loading....
	// check session (sends user to '/' if they don't have one)
	
	TODO: get this 'first run' stuff organized (maybe move to new 'firstrun.js' script?)
	// No 'firstrun' flag? do firstRun()
	else { firstRun(); }
} */

// First Run
// runs one time during initial startup 
// sets a flag named 'firstrun' to true
/* function firstRun() {
	// logging
	log('initializing app','engine');
	// check for SAE key...
	if (getMetaData()) {
		// user has meta-data, but no saved key
		// re-create storage key
		createSaved();
		// reset 'firstrun' flag
		setSaved({"firstrun":true});
		// load the SOLACE Menu
		loadSolaceMenu();	
	}
	// no SAE key?
	// kick off status message waterfall (ui.js)
	// this eventually sets localStorage values
	else { loadScreenOne(); }
}

// Load meta-data from JSON file
async function loadAppInfo(fname){	
	log('loading SAE data...','engine');
	// wait for it...
	let data = await getJSONPromise(fname);
	// create new App Engine key (storage.js)
	createMetaData(data);
	// create app data storage key (storage.js)
	createSaved();
	// set 'firstrun' flag (storage.js)
	setSaved({"firstrun":true});
	// load the SOLACE Menu
	//loadSolaceMenu();
	// Logging 
	if (data) { log('SAE data loaded successfully','engine'); }
} */